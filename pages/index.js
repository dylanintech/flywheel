import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState } from 'react';
import Link from 'next/link';
import { supabase } from './../lib/supabaseClient';

const inter = Inter({ subsets: ['latin'] })



export default function Home() {
  const [users, setUsers] = useState(0);
  const [growthRate, setGrowthRate] = useState(0);
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [company, setCompany] = useState('');
  const [score, setScore] = useState(0);
  const [hasSubmitted, setHasSubmitted] = useState(false);
  
  const getScore = async (u, g, n, e, c) => {
    const score = (parseInt(u) + 20) * parseInt(g / 10);
    console.log(`${u} and ${g} Your score is: ${score}`);
    setScore(score);
    setHasSubmitted(true);
    await supabase.from('leaderboard').insert({ score: score, name: n, email: e, company: c});
  }

  return (
    <>
      <Head>
        <title>flywheel</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>

        <div className={styles.description}>
          <p>
          ðŸŽ¡ flywheel
          </p>
          <Link href="/leaderboard">leaderboard</Link>
        </div>
        {hasSubmitted ? <div>
          <p>Your score: {score}</p>
          <p>Go to <Link className={styles.leaderboardlink} href="/leaderboard">leaderboard</Link> to see how you rank</p>
        </div> : 
        <div>
        </div>
        }

        <div className={styles.formcontainer}>
         <form className={styles.form}> 

         <label
           >
             name
           </label>
           <input
           value={name}
           placeholder= 'Farza'
           type="text"
           onChange={(e) => {
             e.preventDefault();
             setName(e.target.value);
           }}
           >
           </input>

           <label
           >
             email
           </label>
           <input
           value={email}
           placeholder= 'example@email.com'
           type="text"
           onChange={(e) => {
             e.preventDefault();
             setEmail(e.target.value);
           }}
           >
           </input>

           <label
           >
             company/project
           </label>
           <input
           value={company}
           placeholder= 'buildspace'
           type="text"
           onChange={(e) => {
             e.preventDefault();
             setCompany(e.target.value);
           }}
           >
           </input>

         <label
           >
             # users
           </label>
           <input
           value={users}
           placeholder= {156}
           type="number"
           onChange={(e) => {
             e.preventDefault();
             setUsers(e.target.value);
           }}
           >
           </input>
         
           <label
           >
             % weekly growth rate
           </label>
           <input
           value={growthRate}
           placeholder={13}
           type="number"
           onChange={(e) => {
             e.preventDefault();
             setGrowthRate(e.target.value);
           }}
           >
           </input>

           <button type="submit" onClick={(e) => {
             e.preventDefault();
             getScore(users, growthRate, name, email, company);
           }}>
             get your score!
           </button>

         </form>
        </div>
      </main>
    </>
  )
}
